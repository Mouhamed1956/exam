# n-hesitez pas a corriger les erreurs presentes dans cette configuration

name: Deploy to Ubuntu

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y awscli

    

    - name: Set up AWS credentials
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION_NAME }}
      run: |
        aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
        aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
        aws configure set default.region $AWS_REGION

   - name: Deploy to AWS S3
      if: success() # utilisée pour s'assurer que le déploiement vers AWS S3 ne se produit que si toutes les étapes précédentes du workflow se sont terminées avec succès. Cela permet d'éviter de déployer des modifications potentiellement invalides ou incomplètes.
      run: |
        ls -la
        aws s3 sync . s3://${{ secrets.AWS_BUCKET_NAME }} --delete --exclude ".git/*" --exclude ".github/*"
      env:
        AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
        # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #--> ATTENTION : NE TOUCHEZ PAS A CE STEP
    - name: Insert commit ID into HTML
      run: |
        sed -i "s/data-commit-id=\".*\"/data-commit-id=\"${{ github.sha }}\"/g" index.html
        # Vérifier que le remplacement a été effectué correctement
        grep -q "data-commit-id=\"${{ github.sha }}\"" contact.html && echo "ID du commit inséré avec succès." || { echo "Erreur : ID du commit non inséré."; exit 1; }
      env:
        AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}

    - name: Install SSH client
      run: |
        sudo apt-get update
        sudo apt-get install -y openssh-client

    - name: Deploy to AWS Lightsail
      run: 
      touch mykey.pem
      echo "${{ secrets.AWS_LIGHTSAIL_SSH_KEY }}" > mykeyy.pem
      chmod 600 ./mykey.pem
      ssh -o StrictHostKeyChecking=no -i mykey.pem ubuntu@${{ secrets.AWS_LIGHTSAIL_PUBLIC_ IP }} 'mkdir -p /var/www/html/${{ secrets.AWS_BUCKET_NAME }}'
      scp -o StrictHostKeyChecking=no -i mykey.pem -r ./* ubuntu@${{ secrets. AWS_LIGHTSAIL_PUBLIC_IP }}:/var/www/html/${{ secrets.AWS_BUCKET_NAME }}

